// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Authorize_transfer_out;
using Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Auto_renewal;
using Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Check;
using Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Delegation;
using Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Premium_price;
using Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Prices;
using Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Registrations;
using Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Renewals;
using Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Restores;
using Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Transfer_lock;
using Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Transfers;
using Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Whois_privacy;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item
{
    /// <summary>
    /// Builds and executes requests for operations under \{account}\registrar\domains\{domain}
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class WithDomainItemRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The authorize_transfer_out property</summary>
        public global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Authorize_transfer_out.Authorize_transfer_outRequestBuilder Authorize_transfer_out
        {
            get => new global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Authorize_transfer_out.Authorize_transfer_outRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The auto_renewal property</summary>
        public global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Auto_renewal.Auto_renewalRequestBuilder Auto_renewal
        {
            get => new global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Auto_renewal.Auto_renewalRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The check property</summary>
        public global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Check.CheckRequestBuilder Check
        {
            get => new global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Check.CheckRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The delegation property</summary>
        public global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Delegation.DelegationRequestBuilder Delegation
        {
            get => new global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Delegation.DelegationRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The premium_price property</summary>
        public global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Premium_price.Premium_priceRequestBuilder Premium_price
        {
            get => new global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Premium_price.Premium_priceRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The prices property</summary>
        public global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Prices.PricesRequestBuilder Prices
        {
            get => new global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Prices.PricesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The registrations property</summary>
        public global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Registrations.RegistrationsRequestBuilder Registrations
        {
            get => new global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Registrations.RegistrationsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The renewals property</summary>
        public global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Renewals.RenewalsRequestBuilder Renewals
        {
            get => new global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Renewals.RenewalsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The restores property</summary>
        public global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Restores.RestoresRequestBuilder Restores
        {
            get => new global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Restores.RestoresRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The transfer_lock property</summary>
        public global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Transfer_lock.Transfer_lockRequestBuilder Transfer_lock
        {
            get => new global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Transfer_lock.Transfer_lockRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The transfers property</summary>
        public global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Transfers.TransfersRequestBuilder Transfers
        {
            get => new global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Transfers.TransfersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The whois_privacy property</summary>
        public global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Whois_privacy.Whois_privacyRequestBuilder Whois_privacy
        {
            get => new global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Whois_privacy.Whois_privacyRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.WithDomainItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithDomainItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/{account}/registrar/domains/{domain}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.WithDomainItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithDomainItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/{account}/registrar/domains/{domain}", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
