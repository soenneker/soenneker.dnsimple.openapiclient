// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Transfers
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class TransfersPostRequestBody : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Required for TLDS that require authorization-based transfer (the vast majority of TLDs).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AuthCode { get; set; }
#nullable restore
#else
        public string AuthCode { get; set; }
#endif
        /// <summary>Set to true to enable the auto-renewal of the domain. Default: false.</summary>
        public bool? AutoRenew { get; set; }
        /// <summary>Required for TLDs that require extended attributes.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Transfers.TransfersPostRequestBody_extended_attributes? ExtendedAttributes { get; set; }
#nullable restore
#else
        public global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Transfers.TransfersPostRequestBody_extended_attributes ExtendedAttributes { get; set; }
#endif
        /// <summary>Required as confirmation of the price, only if the domain is premium.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PremiumPrice { get; set; }
#nullable restore
#else
        public string PremiumPrice { get; set; }
#endif
        /// <summary>The ID of an existing contact in your account.</summary>
        public int? RegistrantId { get; set; }
        /// <summary>Set to true will attempt to purchase/enable the whois privacy as part of the transfer. An extra cost may apply. Default: false.</summary>
        public bool? WhoisPrivacy { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Transfers.TransfersPostRequestBody"/> and sets the default values.
        /// </summary>
        public TransfersPostRequestBody()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Transfers.TransfersPostRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Transfers.TransfersPostRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Transfers.TransfersPostRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "auth_code", n => { AuthCode = n.GetStringValue(); } },
                { "auto_renew", n => { AutoRenew = n.GetBoolValue(); } },
                { "extended_attributes", n => { ExtendedAttributes = n.GetObjectValue<global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Transfers.TransfersPostRequestBody_extended_attributes>(global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Transfers.TransfersPostRequestBody_extended_attributes.CreateFromDiscriminatorValue); } },
                { "premium_price", n => { PremiumPrice = n.GetStringValue(); } },
                { "registrant_id", n => { RegistrantId = n.GetIntValue(); } },
                { "whois_privacy", n => { WhoisPrivacy = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("auth_code", AuthCode);
            writer.WriteBoolValue("auto_renew", AutoRenew);
            writer.WriteObjectValue<global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.Domains.Item.Transfers.TransfersPostRequestBody_extended_attributes>("extended_attributes", ExtendedAttributes);
            writer.WriteStringValue("premium_price", PremiumPrice);
            writer.WriteIntValue("registrant_id", RegistrantId);
            writer.WriteBoolValue("whois_privacy", WhoisPrivacy);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
