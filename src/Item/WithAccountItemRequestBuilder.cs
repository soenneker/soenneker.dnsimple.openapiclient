// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using Soenneker.DNSimple.OpenApiClient.Item.Billing;
using Soenneker.DNSimple.OpenApiClient.Item.Contacts;
using Soenneker.DNSimple.OpenApiClient.Item.Dns_analytics;
using Soenneker.DNSimple.OpenApiClient.Item.Domains;
using Soenneker.DNSimple.OpenApiClient.Item.Pushes;
using Soenneker.DNSimple.OpenApiClient.Item.Registrar;
using Soenneker.DNSimple.OpenApiClient.Item.Secondary_dns;
using Soenneker.DNSimple.OpenApiClient.Item.Templates;
using Soenneker.DNSimple.OpenApiClient.Item.Vanity;
using Soenneker.DNSimple.OpenApiClient.Item.Webhooks;
using Soenneker.DNSimple.OpenApiClient.Item.Zones;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace Soenneker.DNSimple.OpenApiClient.Item
{
    /// <summary>
    /// Builds and executes requests for operations under \{account}
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class WithAccountItemRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The billing property</summary>
        public global::Soenneker.DNSimple.OpenApiClient.Item.Billing.BillingRequestBuilder Billing
        {
            get => new global::Soenneker.DNSimple.OpenApiClient.Item.Billing.BillingRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The contacts property</summary>
        public global::Soenneker.DNSimple.OpenApiClient.Item.Contacts.ContactsRequestBuilder Contacts
        {
            get => new global::Soenneker.DNSimple.OpenApiClient.Item.Contacts.ContactsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The dns_analytics property</summary>
        public global::Soenneker.DNSimple.OpenApiClient.Item.Dns_analytics.Dns_analyticsRequestBuilder Dns_analytics
        {
            get => new global::Soenneker.DNSimple.OpenApiClient.Item.Dns_analytics.Dns_analyticsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The domains property</summary>
        public global::Soenneker.DNSimple.OpenApiClient.Item.Domains.DomainsRequestBuilder Domains
        {
            get => new global::Soenneker.DNSimple.OpenApiClient.Item.Domains.DomainsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The pushes property</summary>
        public global::Soenneker.DNSimple.OpenApiClient.Item.Pushes.PushesRequestBuilder Pushes
        {
            get => new global::Soenneker.DNSimple.OpenApiClient.Item.Pushes.PushesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The registrar property</summary>
        public global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.RegistrarRequestBuilder Registrar
        {
            get => new global::Soenneker.DNSimple.OpenApiClient.Item.Registrar.RegistrarRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The secondary_dns property</summary>
        public global::Soenneker.DNSimple.OpenApiClient.Item.Secondary_dns.Secondary_dnsRequestBuilder Secondary_dns
        {
            get => new global::Soenneker.DNSimple.OpenApiClient.Item.Secondary_dns.Secondary_dnsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The templates property</summary>
        public global::Soenneker.DNSimple.OpenApiClient.Item.Templates.TemplatesRequestBuilder Templates
        {
            get => new global::Soenneker.DNSimple.OpenApiClient.Item.Templates.TemplatesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The vanity property</summary>
        public global::Soenneker.DNSimple.OpenApiClient.Item.Vanity.VanityRequestBuilder Vanity
        {
            get => new global::Soenneker.DNSimple.OpenApiClient.Item.Vanity.VanityRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The webhooks property</summary>
        public global::Soenneker.DNSimple.OpenApiClient.Item.Webhooks.WebhooksRequestBuilder Webhooks
        {
            get => new global::Soenneker.DNSimple.OpenApiClient.Item.Webhooks.WebhooksRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The zones property</summary>
        public global::Soenneker.DNSimple.OpenApiClient.Item.Zones.ZonesRequestBuilder Zones
        {
            get => new global::Soenneker.DNSimple.OpenApiClient.Item.Zones.ZonesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.DNSimple.OpenApiClient.Item.WithAccountItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithAccountItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/{account}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.DNSimple.OpenApiClient.Item.WithAccountItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithAccountItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/{account}", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
