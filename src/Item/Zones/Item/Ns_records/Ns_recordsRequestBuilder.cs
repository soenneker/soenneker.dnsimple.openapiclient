// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using Soenneker.DNSimple.OpenApiClient.Models;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Soenneker.DNSimple.OpenApiClient.Item.Zones.Item.Ns_records
{
    /// <summary>
    /// Builds and executes requests for operations under \{account}\zones\{zone}\ns_records
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Ns_recordsRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.DNSimple.OpenApiClient.Item.Zones.Item.Ns_records.Ns_recordsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public Ns_recordsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/{account}/zones/{zone}/ns_records", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.DNSimple.OpenApiClient.Item.Zones.Item.Ns_records.Ns_recordsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public Ns_recordsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/{account}/zones/{zone}/ns_records", rawUrl)
        {
        }
        /// <summary>
        /// Updates the zone&apos;s NS records
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.DNSimple.OpenApiClient.Item.Zones.Item.Ns_records.Ns_recordsPutResponse"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Soenneker.DNSimple.OpenApiClient.Models.Ns_records404Error">When receiving a 404 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Soenneker.DNSimple.OpenApiClient.Item.Zones.Item.Ns_records.Ns_recordsPutResponse?> PutAsNs_recordsPutResponseAsync(global::Soenneker.DNSimple.OpenApiClient.Item.Zones.Item.Ns_records.Ns_recordsRequestBuilder.Ns_recordsPutRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Soenneker.DNSimple.OpenApiClient.Item.Zones.Item.Ns_records.Ns_recordsPutResponse> PutAsNs_recordsPutResponseAsync(global::Soenneker.DNSimple.OpenApiClient.Item.Zones.Item.Ns_records.Ns_recordsRequestBuilder.Ns_recordsPutRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPutRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "404", global::Soenneker.DNSimple.OpenApiClient.Models.Ns_records404Error.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Soenneker.DNSimple.OpenApiClient.Item.Zones.Item.Ns_records.Ns_recordsPutResponse>(requestInfo, global::Soenneker.DNSimple.OpenApiClient.Item.Zones.Item.Ns_records.Ns_recordsPutResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Updates the zone&apos;s NS records
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.DNSimple.OpenApiClient.Item.Zones.Item.Ns_records.Ns_recordsResponse"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Soenneker.DNSimple.OpenApiClient.Models.Ns_records404Error">When receiving a 404 status code</exception>
        [Obsolete("This method is obsolete. Use PutAsNs_recordsPutResponseAsync instead.")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Soenneker.DNSimple.OpenApiClient.Item.Zones.Item.Ns_records.Ns_recordsResponse?> PutAsync(global::Soenneker.DNSimple.OpenApiClient.Item.Zones.Item.Ns_records.Ns_recordsRequestBuilder.Ns_recordsPutRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Soenneker.DNSimple.OpenApiClient.Item.Zones.Item.Ns_records.Ns_recordsResponse> PutAsync(global::Soenneker.DNSimple.OpenApiClient.Item.Zones.Item.Ns_records.Ns_recordsRequestBuilder.Ns_recordsPutRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPutRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "404", global::Soenneker.DNSimple.OpenApiClient.Models.Ns_records404Error.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Soenneker.DNSimple.OpenApiClient.Item.Zones.Item.Ns_records.Ns_recordsResponse>(requestInfo, global::Soenneker.DNSimple.OpenApiClient.Item.Zones.Item.Ns_records.Ns_recordsResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Updates the zone&apos;s NS records
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPutRequestInformation(global::Soenneker.DNSimple.OpenApiClient.Item.Zones.Item.Ns_records.Ns_recordsRequestBuilder.Ns_recordsPutRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPutRequestInformation(global::Soenneker.DNSimple.OpenApiClient.Item.Zones.Item.Ns_records.Ns_recordsRequestBuilder.Ns_recordsPutRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.PUT, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.DNSimple.OpenApiClient.Item.Zones.Item.Ns_records.Ns_recordsRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Soenneker.DNSimple.OpenApiClient.Item.Zones.Item.Ns_records.Ns_recordsRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Soenneker.DNSimple.OpenApiClient.Item.Zones.Item.Ns_records.Ns_recordsRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.DNSimple.OpenApiClient.Item.Zones.Item.Ns_records.Ns_recordsPutRequestBodyMember1"/>, <see cref="global::Soenneker.DNSimple.OpenApiClient.Item.Zones.Item.Ns_records.Ns_recordsPutRequestBodyMember2"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Ns_recordsPutRequestBody : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Soenneker.DNSimple.OpenApiClient.Item.Zones.Item.Ns_records.Ns_recordsPutRequestBodyMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.DNSimple.OpenApiClient.Item.Zones.Item.Ns_records.Ns_recordsPutRequestBodyMember1? NsRecordsPutRequestBodyMember1 { get; set; }
#nullable restore
#else
            public global::Soenneker.DNSimple.OpenApiClient.Item.Zones.Item.Ns_records.Ns_recordsPutRequestBodyMember1 NsRecordsPutRequestBodyMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.DNSimple.OpenApiClient.Item.Zones.Item.Ns_records.Ns_recordsPutRequestBodyMember2"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.DNSimple.OpenApiClient.Item.Zones.Item.Ns_records.Ns_recordsPutRequestBodyMember2? NsRecordsPutRequestBodyMember2 { get; set; }
#nullable restore
#else
            public global::Soenneker.DNSimple.OpenApiClient.Item.Zones.Item.Ns_records.Ns_recordsPutRequestBodyMember2 NsRecordsPutRequestBodyMember2 { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.DNSimple.OpenApiClient.Item.Zones.Item.Ns_records.Ns_recordsRequestBuilder.Ns_recordsPutRequestBody"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.DNSimple.OpenApiClient.Item.Zones.Item.Ns_records.Ns_recordsRequestBuilder.Ns_recordsPutRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.DNSimple.OpenApiClient.Item.Zones.Item.Ns_records.Ns_recordsRequestBuilder.Ns_recordsPutRequestBody();
                result.NsRecordsPutRequestBodyMember1 = new global::Soenneker.DNSimple.OpenApiClient.Item.Zones.Item.Ns_records.Ns_recordsPutRequestBodyMember1();
                result.NsRecordsPutRequestBodyMember2 = new global::Soenneker.DNSimple.OpenApiClient.Item.Zones.Item.Ns_records.Ns_recordsPutRequestBodyMember2();
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(NsRecordsPutRequestBodyMember1 != null || NsRecordsPutRequestBodyMember2 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(NsRecordsPutRequestBodyMember1, NsRecordsPutRequestBodyMember2);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                writer.WriteObjectValue<global::Soenneker.DNSimple.OpenApiClient.Item.Zones.Item.Ns_records.Ns_recordsPutRequestBodyMember1>(null, NsRecordsPutRequestBodyMember1, NsRecordsPutRequestBodyMember2);
            }
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Ns_recordsRequestBuilderPutRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
