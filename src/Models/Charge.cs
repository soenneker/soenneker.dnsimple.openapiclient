// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.DNSimple.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Charge : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The amount that was paid via wallet.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BalanceAmount { get; set; }
#nullable restore
#else
        public string BalanceAmount { get; set; }
#endif
        /// <summary>A date-time value formatted as ISO 8601.</summary>
        public DateTimeOffset? InvoicedAt { get; set; }
        /// <summary>The items property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.DNSimple.OpenApiClient.Models.ChargeItem>? Items { get; set; }
#nullable restore
#else
        public List<global::Soenneker.DNSimple.OpenApiClient.Models.ChargeItem> Items { get; set; }
#endif
        /// <summary>The reference number of the invoice.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Reference { get; set; }
#nullable restore
#else
        public string Reference { get; set; }
#endif
        /// <summary>The state property</summary>
        public global::Soenneker.DNSimple.OpenApiClient.Models.Charge_state? State { get; set; }
        /// <summary>The aggregate amount of all line items, that need to be paid.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TotalAmount { get; set; }
#nullable restore
#else
        public string TotalAmount { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.DNSimple.OpenApiClient.Models.Charge"/> and sets the default values.
        /// </summary>
        public Charge()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.DNSimple.OpenApiClient.Models.Charge"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.DNSimple.OpenApiClient.Models.Charge CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.DNSimple.OpenApiClient.Models.Charge();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "balance_amount", n => { BalanceAmount = n.GetStringValue(); } },
                { "invoiced_at", n => { InvoicedAt = n.GetDateTimeOffsetValue(); } },
                { "items", n => { Items = n.GetCollectionOfObjectValues<global::Soenneker.DNSimple.OpenApiClient.Models.ChargeItem>(global::Soenneker.DNSimple.OpenApiClient.Models.ChargeItem.CreateFromDiscriminatorValue)?.AsList(); } },
                { "reference", n => { Reference = n.GetStringValue(); } },
                { "state", n => { State = n.GetEnumValue<global::Soenneker.DNSimple.OpenApiClient.Models.Charge_state>(); } },
                { "total_amount", n => { TotalAmount = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("balance_amount", BalanceAmount);
            writer.WriteDateTimeOffsetValue("invoiced_at", InvoicedAt);
            writer.WriteCollectionOfObjectValues<global::Soenneker.DNSimple.OpenApiClient.Models.ChargeItem>("items", Items);
            writer.WriteStringValue("reference", Reference);
            writer.WriteEnumValue<global::Soenneker.DNSimple.OpenApiClient.Models.Charge_state>("state", State);
            writer.WriteStringValue("total_amount", TotalAmount);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
